1、封装变化
鸭子的飞行行为和呱呱叫行为都是变化的，将它们封装到两个行为类中，
在以后可以轻易地改动或扩充行为而不影响其他部分，系统更有弹性。

2、多用组合，少用继承
Duck内部持有FlyBehavior和QuackBehavior的引用，
鸭子的行为是和行为对象“组合”而来的，使系统具有很大的弹性，并且可以动态设置行为。

3、针对接口编程，不针对实现编程
Duck内部的属性flyBehavior和quackBehavior都是接口类型的，
将具体行为与鸭子类分离开来，实现了解耦，并且我们能够在运行时通过多态的魔力动态地指定行为的不同的实现类。

----------------------------------------------------------------
此设计，再新增不同类型的鸭子时，只需继承Duck超类，并组合相应的行为即可。不会对原有对象造成影响。
